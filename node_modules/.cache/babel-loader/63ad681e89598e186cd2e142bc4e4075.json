{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { LinePath } from \"@vx/shape\";\nimport { localPoint } from \"@vx/event\";\nimport { Drag } from \"@vx/drag\";\nimport { curveBasis } from \"@vx/curve\";\nimport { LinearGradient } from \"@vx/gradient\"; // import Nav from \"./Nav\";\n// import React from \"react\";\n\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nvar DragII =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DragII, _React$Component);\n\n  function DragII(props) {\n    var _this;\n\n    _classCallCheck(this, DragII);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DragII).call(this, props));\n    _this.state = {\n      data: props.data || [],\n      width: 0,\n      height: 0\n    };\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clear = _this.clear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.undo = _this.undo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DragII, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(this.state.data);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        data: []\n      });\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      console.log(this.state.data.length);\n      this.setState({\n        data: this.state.data.slice(0, this.state.data.length - 1)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const { width, height } = this.props;\n      var width = this.state.width - this.state.height * 0.1;\n      var height = this.state.height - this.state.height * 0.1;\n      return React.createElement(\"div\", null, React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        className: \"jsx-226574257\"\n      }, React.createElement(Nav, {\n        style: {\n          marginRight: \"auto\",\n          marginLeft: 0\n        }\n      }, React.createElement(NavItem, null, React.createElement(NavLink, null, React.createElement(\"p\", {\n        style: {\n          color: \"#d95d39\"\n        },\n        className: \"jsx-226574257\"\n      }, \"SimpleCanvas\")))), React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        className: \"jsx-226574257\"\n      }, React.createElement(Nav, {\n        style: {\n          marginRight: 0,\n          marginLeft: \"auto\"\n        }\n      }, React.createElement(NavItem, null, React.createElement(NavLink, {\n        href: \"#\",\n        onClick: this.undo\n      }, \"undo\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        href: \"#\",\n        onClick: this.clear\n      }, \"clear\")))), React.createElement(_JSXStyle, {\n        id: \"226574257\"\n      }, [\"a{color:#d95d39;}\", \"a:hover{color:#7b9e89;}\"])), React.createElement(\"div\", {\n        className: \"outer\",\n        style: {\n          width: \"100vw\",\n          display: \"inline-flex\"\n        }\n      }, React.createElement(\"div\", {\n        className: \"DragII\",\n        style: {\n          display: \"inline-flex\",\n          touchAction: \"none\",\n          margin: \"auto\"\n        }\n      }, React.createElement(\"svg\", {\n        width: width,\n        height: height,\n        className: \"jsx-3060606734\" + \" \" + \"svg-inn\"\n      }, React.createElement(LinearGradient, {\n        id: \"stroke\",\n        from: \"#ff614e\",\n        to: \"#ffdc64\"\n      }), React.createElement(\"rect\", {\n        fill: \"#04002b\",\n        width: width,\n        height: height,\n        rx: 14,\n        className: \"jsx-3060606734\"\n      }), this.state.data.map(function (d, i) {\n        return React.createElement(LinePath, {\n          key: \"line-\".concat(i),\n          fill: \"transparent\",\n          stroke: \"url(#stroke)\",\n          strokeWidth: 3,\n          data: d,\n          curve: curveBasis,\n          x: function x(d) {\n            return d.x;\n          },\n          y: function y(d) {\n            return d.y;\n          },\n          xScale: function xScale(d) {\n            return d;\n          },\n          yScale: function yScale(d) {\n            return d;\n          }\n        });\n      }), React.createElement(Drag, {\n        width: width,\n        height: height,\n        resetOnStart: true,\n        onDragStart: function onDragStart(_ref) {\n          var x = _ref.x,\n              y = _ref.y;\n\n          // add the new line with the starting point\n          _this2.setState(function (state, props) {\n            var newLine = [{\n              x: x,\n              y: y\n            }];\n            return {\n              data: state.data.concat([newLine])\n            };\n          });\n        },\n        onDragMove: function onDragMove(_ref2) {\n          var x = _ref2.x,\n              y = _ref2.y,\n              dx = _ref2.dx,\n              dy = _ref2.dy;\n\n          // add the new point to the current line\n          _this2.setState(function (state, props) {\n            var nextData = _toConsumableArray(state.data);\n\n            var point = [{\n              x: x + dx,\n              y: y + dy\n            }];\n            var i = nextData.length - 1;\n            nextData[i] = nextData[i].concat(point);\n            return {\n              data: nextData\n            };\n          });\n        }\n      }, function (_ref3) {\n        var x = _ref3.x,\n            y = _ref3.y,\n            dx = _ref3.dx,\n            dy = _ref3.dy,\n            isDragging = _ref3.isDragging,\n            dragStart = _ref3.dragStart,\n            dragEnd = _ref3.dragEnd,\n            dragMove = _ref3.dragMove;\n        return React.createElement(\"g\", {\n          className: \"jsx-3060606734\"\n        }, isDragging && React.createElement(\"g\", {\n          className: \"jsx-3060606734\"\n        }, React.createElement(\"rect\", {\n          fill: \"white\",\n          width: 8,\n          height: 8,\n          x: x + dx - 4,\n          y: y + dy - 4,\n          style: {\n            pointerEvents: \"none\"\n          },\n          className: \"jsx-3060606734\"\n        }), React.createElement(\"circle\", {\n          cx: x,\n          cy: y,\n          r: 4,\n          fill: \"transparent\",\n          stroke: \"white\",\n          style: {\n            pointerEvents: \"none\"\n          },\n          className: \"jsx-3060606734\"\n        })), React.createElement(\"rect\", {\n          fill: \"transparent\",\n          width: width,\n          height: height,\n          onMouseDown: dragStart,\n          onMouseUp: dragEnd,\n          onMouseMove: dragMove,\n          onTouchStart: dragStart,\n          onTouchEnd: dragEnd,\n          onTouchMove: dragMove,\n          className: \"jsx-3060606734\"\n        }));\n      }), React.createElement(_JSXStyle, {\n        id: \"3060606734\"\n      }, [\".svg-inn.jsx-3060606734{margin:auto;max-width:100%;}\"])))));\n    }\n  }]);\n\n  return DragII;\n}(React.Component);\n\nexport { DragII as default };","map":null,"metadata":{},"sourceType":"module"}